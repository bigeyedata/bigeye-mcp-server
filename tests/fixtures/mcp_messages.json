{
  "initialize": {
    "request": {
      "jsonrpc": "2.0",
      "id": 1,
      "method": "initialize",
      "params": {
        "protocolVersion": "0.1.0",
        "capabilities": {
          "roots": {
            "listChanged": true
          },
          "sampling": {}
        },
        "clientInfo": {
          "name": "mcp-test-client",
          "version": "1.0.0"
        }
      }
    },
    "expected_response_fields": ["protocolVersion", "capabilities", "serverInfo"]
  },
  "list_tools": {
    "request": {
      "jsonrpc": "2.0",
      "id": 2,
      "method": "tools/list",
      "params": {}
    },
    "expected_tools": [
      "check_health",
      "get_issues",
      "merge_issues",
      "unmerge_issues",
      "get_issue_resolution_steps",
      "update_issue",
      "get_lineage_node",
      "get_lineage_graph",
      "analyze_upstream_root_causes",
      "analyze_downstream_impact",
      "get_lineage_node_issues",
      "trace_issue_lineage_path"
    ]
  },
  "list_resources": {
    "request": {
      "jsonrpc": "2.0",
      "id": 3,
      "method": "resources/list",
      "params": {}
    },
    "expected_resources": [
      "bigeye://health",
      "bigeye://config",
      "bigeye://issues"
    ]
  },
  "list_prompts": {
    "request": {
      "jsonrpc": "2.0",
      "id": 4,
      "method": "prompts/list",
      "params": {}
    },
    "expected_prompts": [
      "check_connection_info",
      "merge_issues_example",
      "unmerge_issues_example",
      "issue_resolution_example",
      "lineage_analysis_examples"
    ]
  },
  "call_check_health": {
    "request": {
      "jsonrpc": "2.0",
      "id": 5,
      "method": "tools/call",
      "params": {
        "name": "check_health",
        "arguments": {}
      }
    },
    "expected_response_type": "object"
  },
  "read_config_resource": {
    "request": {
      "jsonrpc": "2.0",
      "id": 6,
      "method": "resources/read",
      "params": {
        "uri": "bigeye://config"
      }
    },
    "expected_fields": ["api_url", "has_api_key", "workspace_id", "debug_enabled"]
  },
  "get_prompt": {
    "request": {
      "jsonrpc": "2.0",
      "id": 7,
      "method": "prompts/get",
      "params": {
        "name": "check_connection_info"
      }
    },
    "expected_response_fields": ["description", "messages"]
  },
  "invalid_method": {
    "request": {
      "jsonrpc": "2.0",
      "id": 999,
      "method": "invalid/method",
      "params": {}
    },
    "expect_error": true
  }
}